---
ingressPorts:
  - 443
  - 80
ingressPortsSSH:
  - 22
---

  {{parameter "key_name" logicalId="KeyName"}}
  {{parameter "image_id" "base" logicalId="ImageId"}}
  {{parameter "instance_type" logicalId="InstanceType"}}
  {{parameter "name_tag" logicalId="NameTag"}}
  {{parameter "volume" logicalId="VolumeSize"}}
  {{parameter "iops" logicalId="VolumeIOps"}}
  {{parameter "ssh_location" logicalId="SshLocation"}}
  {{parameter "role_select" logicalId="RoleSelect"}}
  {{parameter "bucket_name" logicalId="BucketName"}}
  {{parameter "eip" logicalId="EIP"}}
  {{parameter "eip_usage" logicalId="ElasticIpUsage"}}
  {{parameter "uuid" logicalId="UUID"}}

  {{condition "defined_eip" logicalId="DefinedEIP"
    elasticIPLogicalId="ElasticIpUsage"}}
  
  {{condition "defined_role" logicalId="DefinedRole"
   roleSelectLogicalId="RoleSelect"}}
 
 
  {{parameter "m:core" "cidr_range"
    logicalId="SourceCIDR"
    allowedPattern="(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    maxLength="18"
    minLength="9"
    description="The IP address range that can be used to access the Enhanced Snapshots instance over HTTP(80) and HTTPS(443).For security considerations 0.0.0.0/0 is not recommended, please restrict to a smaller IP range.  x.x.x.x/x format "
    constraintDescription="must be a valid CIDR range formatted as x.x.x.x/x"
  }}
 

   {{
  resource 'instanceprofile' logicalId="InstanceProfileEsAdmin"
  roleSelectLogicalId="RoleSelect"
  definedRoleLogicalId="DefinedRole"
  }}
  {{resource 'role' logicalId="EsAdmin"
	 definedRoleLogicalId="DefinedRole"}}
  {{resource 'managedpolicy' logicalId="ManagedPolicy"
    definedRoleLogicalId="DefinedRole"}} 

  {{set "m:core" "true_false" parameterLogicalId="CreateSecurityRules" default="true"}}
  {{#each ingressPortsSSH}}
    {{
      resource "m:core" "base"
      type="AWS::EC2::SecurityGroupIngress"
      condition="CreateSecurityRulesIsTrueCondition"
      logicalId=(concat "SecurityGroupIngress" this)
      properties=(
        partial "security_group_ingress_properties"
        cidrLogicalId="SshLocation"
        securityGroupId='{"Fn::GetAtt": ["SecurityGroup","GroupId"]}'
        fromPort=this
        toPort=this
      )
    }}
  {{/each}}

  {{#each ingressPorts}}
    {{
      resource "m:core" "base"
      type="AWS::EC2::SecurityGroupIngress"
      condition="CreateSecurityRulesIsTrueCondition"
      logicalId=(concat "SecurityGroupIngress" this)
      properties=(
        partial "security_group_ingress_properties"
        cidrLogicalId="SourceCIDR"
        securityGroupId='{"Fn::GetAtt": ["SecurityGroup","GroupId"]}'
        fromPort=this
        toPort=this
      )
    }}
  {{/each}}
     
  {{set 'module:particles-ec2' 'instance/output_all' instanceLogicalId="Instance"}}
  {{set 'module:particles-vpc' 'security_group/output_all' securityGroupLogicalId="SecurityGroup"}}
