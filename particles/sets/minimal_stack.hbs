---
ingressPorts:
  - 443
  - 80
  - 22
---

  {{parameter "key_name" logicalId="KeyName"}}
  {{parameter "image_id" "base" logicalId="ImageId"}}
  {{parameter "instance_type" logicalId="InstanceType"}}
  {{parameter "name_tag" logicalId="NameTag"}}

  {{
    parameter "m:core" "cidr_range"
    logicalId="SourceCIDR"
    default="0.0.0.0/0"
    description="If CreateSecurityRules is 'true' then ports 80, 443 and 22 will be opened for this CIDR.  It is highly recommended to change this from the default to a more restrictive setting."
  }}
  {{set "m:core" "true_false" parameterLogicalId="CreateSecurityRules" default="true"}}

  {{resource 'user' logicalId="User"}}
  {{resource 'access_key' logicalId="AccessKey"}}
  {{resource 'role' logicalId="EsAdmin"}}
  {{resource 'managedpolicy' logicalId="ManagedPolicy"}}
  {{resource 'instanceprofile' logicalId="InstanceProfile"}}

  {{#each ingressPorts}}
    {{
      resource "m:core" "base"
      type="AWS::EC2::SecurityGroupIngress"
      condition="CreateSecurityRulesIsTrueCondition"
      logicalId=(concat "SecurityGroupIngress" this)
      properties=(
        partial "security_group_ingress_properties"
        cidrLogicalId="SourceCIDR"
        securityGroupId='{"Fn::GetAtt": ["SecurityGroup","GroupId"]}'
        fromPort=this
        toPort=this
      )
    }}
  {{/each}}

  {{
    output "m:core" "base"
    logicalId="AppUrl"
    value='{"Fn::Join": ["",["https://",{"Fn::GetAtt": ["Instance","PublicDnsName"]}]]}'
  }}

  {{
    output "m:core" "base"
    logicalId="UserName"
    value='{"Ref": "User"}'
  }}

  {{
    output "m:core" "base"
    logicalId="UserArn" value='{"Fn::GetAtt": ["User","Arn"] }'
  }}

  {{set 'module:particles-ec2' 'instance_output_all' instanceLogicalId="Instance"}}
  {{set 'module:particles-ec2' 'security_group_output_all' securityGroupLogicalId="SecurityGroup"}}
