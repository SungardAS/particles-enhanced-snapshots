{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template was built to run in us-east-1 and will create resources to run enhanced-snapshots (https://github.com/sungardas/enhanced-snapshots) in high availability mode . Templates for other regions can be found at https://github.com/sungardas/particle-enhanced-snapshots",
  "Mappings": {
    "RegionMap": {
      "us-east-1": {
        "ImageID": "ami-3f618429"
      },
      "us-west-1": {
        "ImageID": "ami-6fa7f70f"
      },
      "us-west-2": {
        "ImageID": "ami-01c97a61"
      },
      "sa-east-1": {
        "ImageID": "ami-ba21bad6"
      },
      "eu-central-1": {
        "ImageID": "ami-f1ac619e"
      },
      "eu-west-1": {
        "ImageID": "ami-a092bcd3"
      },
      "ap-southeast-1": {
        "ImageID": "ami-2b8f2748"
      },
      "ap-southeast-2": {
        "ImageID": "ami-25111446"
      },
      "ap-northeast-1": {
        "ImageID": "ami-8a8cfced"
      },
      "ap-northeast-2": {
        "ImageID": "ami-5b5c8a35"
      }
    }
  },
  "Outputs": {
    "SecurityGroupId": {
      "Value": {
        "Fn::GetAtt": [
          "SecurityGroup",
          "GroupId"
        ]
      },
      "Description": "Group ID for SecurityGroup"
    },
    "SecurityGroupName": {
      "Value": {
        "Ref": "SecurityGroup"
      },
      "Description": "Group Name for SecurityGroup"
    },
    "ElasticLoadBalancerId": {
      "Value": {
        "Ref": "ElasticLoadBalancer"
      },
      "Description": "ID for ElasticLoadBalancer"
    },
    "ElasticLoadBalancerCanonicalHostedZoneName": {
      "Value": {
        "Fn::GetAtt": [
          "ElasticLoadBalancer",
          "CanonicalHostedZoneName"
        ]
      },
      "Description": "The name of the Amazon Route 53 hosted zone that is associated with "
    },
    "ElasticLoadBalancerCanonicalHostedZoneNameId": {
      "Value": {
        "Fn::GetAtt": [
          "ElasticLoadBalancer",
          "CanonicalHostedZoneNameID"
        ]
      },
      "Description": "The ID of the Amazon Route 53 hosted zone name that is associated with "
    },
    "ElasticLoadBalancerDNSName": {
      "Value": {
        "Fn::GetAtt": [
          "ElasticLoadBalancer",
          "DNSName"
        ]
      },
      "Description": "The DNS name for "
    },
    "ElasticLoadBalancerSourceSecurityGroupName": {
      "Value": {
        "Fn::GetAtt": [
          "ElasticLoadBalancer",
          "SourceSecurityGroup.GroupName"
        ]
      },
      "Description": "The security group that you can use as part of your inbound rules for your load balancer's back-end Amazon EC2 application instances"
    },
    "ElasticLoadBalancerSourceSecurityGroupOwnerAlias": {
      "Value": {
        "Fn::GetAtt": [
          "ElasticLoadBalancer",
          "SourceSecurityGroup.OwnerAlias"
        ]
      },
      "Description": "The owner of the source security group"
    }
  },
  "Parameters": {
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "[required] Name of an existing EC2 key pair to enable SSH access to the instances",
      "ConstraintDescription": "Must be the name of an existing EC2 KeyPair."
    },
    "InstanceType": {
      "Type": "String",
      "Default": "m3.large",
      "AllowedValues": [
        "t2.medium",
        "t2.large",
        "t2.xlarge",
        "t2.2xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "m4.16xlarge",
        "cc1.4xlarge",
        "cc2.8xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "f1.2xlarge",
        "f1.16xlarge",
        "p2.xlarge",
        "p2.8xlarge",
        "p2.16xlarge",
        "cg1.4xlarge",
        "cr1.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "r4.large",
        "r4.xlarge",
        "r4.2xlarge",
        "r4.4xlarge",
        "r4.8xlarge",
        "r4.16xlarge",
        "x1.16xlarge",
        "x1.32xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "i3.xlarge",
        "i3.2xlarge",
        "i3.4xlarge",
        "i3.8xlarge",
        "i3.16xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge"
      ],
      "Description": "Choose the instance type to use for the Enhanced Snapshot",
      "ConstraintDescription": "Choose one of the suggested common EC2 instance types and change/upgrade to other types as needed"
    },
    "NameTag": {
      "Type": "String",
      "Default": "Enhanced Snapshots",
      "Description": "[required] Will set the name tag on created resources"
    },
    "VolumeSize": {
      "Type": "Number",
      "Default": "24",
      "MinValue": "8",
      "Description": "[Required]Volume size should be calculated on the basis of 4% of expected backup data size, e.g. for storing 10TB of data it will be required to create instance EBS volume near 400GB",
      "ConstraintDescription": "Size can be as small as 8 however can be higher to accomodate large size backups"
    },
    "VolumeIOps": {
      "Type": "Number",
      "Default": "720",
      "MinValue": "240",
      "Description": "[Required]The number of I/O operations per second (IOPS) that the volume supports. You can use max 50 iops per GB",
      "ConstraintDescription": "IOPs can be 240 due to min volume size however can be higher"
    },
    "SshLocation": {
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "MaxLength": "18",
      "MinLength": "9",
      "Description": "The IP address range that can be used to access the Enhanced Snapshots instance over SSH.  For security considerations 0.0.0.0/0 is not recommended, please restrict to a smaller IP range. x.x.x.x/x format",
      "ConstraintDescription": "must be a valid IP range of the form x.x.x.x/x."
    },
    "BucketName": {
      "Type": "String",
      "Default": "enhancedsnapshots",
      "AllowedPattern": "^\\S+$",
      "MaxLength": "63",
      "MinLength": "3",
      "Description": "[required] Use your previously created bucket name for sdfs data or leave default value. Please, follow Amazon S3 Bucket Naming Requirements.",
      "ConstraintDescription": "Value must be not null or use default name - enhancedsnapshots "
    },
    "ClusterName": {
      "Type": "String",
      "Default": "cluster1",
      "AllowedPattern": "^\\S+$",
      "MaxLength": "20",
      "MinLength": "3",
      "Description": "[required] Enter name of cluster will be created",
      "ConstraintDescription": "You need to specify cluster name (3-20 chars)"
    },
    "UUID": {
      "Type": "String",
      "AllowedPattern": "(^$)|(^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$)",
      "MaxLength": "36",
      "Description": "[optional] UUID - unique id of system, it can be used to integrate with other systems",
      "ConstraintDescription": "must be a valid UUID"
    },
    "VpcId": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "[required] VPC to create the cluster in."
    },
    "VPCCIDR": {
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "MaxLength": "18",
      "MinLength": "9",
      "Description": "VPC CIDR (use the choosen below)",
      "ConstraintDescription": "must be a valid CIDR range formatted as x.x.x.x/x"
    },
    "TemplateUrl": {
      "Type": "String",
      "AllowedPattern": "https?://[a-z0-9]+",
      "MaxLength": "100",
      "MinLength": "10",
      "Description": "The nested stack template URL for SSM documents",
      "ConstraintDescription": "must be a valid HTTP/HTTPS URL format https://s3.amazonaws.com/.../TemplateName.template"
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "[Required] Network for Elastic Load Balancer. Network defines region to operate in."
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "[Required] Network for Elastic Load Balancer. Network defines region to operate in."
    },
    "SslCertificateArn": {
      "Type": "String",
      "AllowedPattern": "arn:aws:([a-zA-Z0-9\\-])+:([a-z]{2}-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
      "Description": "[Required] Existing SSL Certificate ARN for Elastic Load Balancer"
    },
    "SourceCIDR": {
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "MaxLength": "18",
      "MinLength": "9",
      "Description": "The IP address range that can be used to access the Enhanced Snapshots instances over HTTP(80) and HTTPS(443).For security considerations 0.0.0.0/0 is not recommended, please restrict to a smaller IP range.  x.x.x.x/x format ",
      "ConstraintDescription": "must be a valid CIDR range formatted as x.x.x.x/x"
    }
  },
  "Resources": {
    "InstanceProfileEsAdmin": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "EsAdmin"
          }
        ]
      }
    },
    "EsAdmin": {
      "Type": "AWS::IAM::Role",
      "DeletionPolicy": "Retain",
      "Condition": "",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "ManagedPolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "DeletionPolicy": "Retain",
      "Condition": "",
      "Properties": {
        "Description": "Policy es admin role",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "1",
              "Effect": "Allow",
              "Action": [
                "ec2:CreateSnapshot",
                "ec2:CreateTags",
                "ec2:CreateVolume",
                "ec2:DeleteSnapshot",
                "ec2:DeleteTags",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeInstanceAttribute",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInstances",
                "ec2:DescribeRegions",
                "ec2:DescribeSnapshotAttribute",
                "ec2:DescribeSnapshots",
                "ec2:DescribeNetworkAcls",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeTags",
                "ec2:DescribeVolumeAttribute",
                "ec2:DescribeVolumeStatus",
                "ec2:DescribeVolumes",
                "ec2:EnableVolumeIO",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifySnapshotAttribute",
                "ec2:ModifyVolumeAttribute",
                "ec2:ResetSnapshotAttribute",
                "s3:ListAllMyBuckets",
                "dynamodb:ListTables",
                "cloudformation:ListStacks"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "ec2:AttachVolume",
                "ec2:DeleteVolume",
                "ec2:DetachVolume",
                "ec2:TerminateInstances"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:ec2",
                      {
                        "Ref": "AWS::Region"
                      },
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "instance/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:ec2",
                      {
                        "Ref": "AWS::Region"
                      },
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "volume/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:logs",
                      {
                        "Ref": "AWS::Region"
                      },
                      "*:*"
                    ]
                  ]
                }
              ]
            },
            {
              "Sid": "AllowReservedCapacityDescriptions",
              "Effect": "Allow",
              "Action": [
                "dynamodb:DescribeReservedCapacity",
                "dynamodb:DescribeReservedCapacityOfferings"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:dynamodb",
                      {
                        "Ref": "AWS::Region"
                      },
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": "dynamodb:*",
              "Resource": [
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:dynamodb",
                      {
                        "Ref": "AWS::Region"
                      },
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "table/ENHANCEDSNAPSHOTS*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:dynamodb",
                      {
                        "Ref": "AWS::Region"
                      },
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "table/ENHANCEDSNAPSHOTS*/index/*"
                    ]
                  ]
                }
              ],
              "Condition": {}
            },
            {
              "Condition": {},
              "Action": "s3:*",
              "Resource": [
                "arn:aws:s3:::com.sungardas.enhancedsnapshots*",
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "BucketName"
                      },
                      "*"
                    ]
                  ]
                }
              ],
              "Effect": "Allow"
            },
            {
              "Condition": {},
              "Action": "autoscaling:*",
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Condition": {},
              "Action": "ec2:*",
              "Resource": [
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:ec2",
                      {
                        "Ref": "AWS::Region"
                      },
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "security-group/*"
                    ]
                  ]
                }
              ],
              "Effect": "Allow"
            },
            {
              "Condition": {},
              "Action": [
                "elasticloadbalancing:DeleteLoadBalancer"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::Join": [
                          ":",
                          [
                            "arn:aws:elasticloadbalancing",
                            {
                              "Ref": "AWS::Region"
                            },
                            {
                              "Ref": "AWS::AccountId"
                            },
                            "loadbalancer/"
                          ]
                        ]
                      },
                      {
                        "Ref": "ClusterName"
                      },
                      "-lb"
                    ]
                  ]
                }
              ],
              "Effect": "Allow"
            },
            {
              "Condition": {},
              "Action": "iam:*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::Join": [
                          ":",
                          [
                            "arn:aws:iam:",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            "role/"
                          ]
                        ]
                      },
                      {
                        "Ref": "AWS::StackName"
                      },
                      "*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::Join": [
                          ":",
                          [
                            "arn:aws:iam:",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            "policy/"
                          ]
                        ]
                      },
                      {
                        "Ref": "AWS::StackName"
                      },
                      "*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::Join": [
                          ":",
                          [
                            "arn:aws:iam:",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            "instance-profile/"
                          ]
                        ]
                      },
                      {
                        "Ref": "AWS::StackName"
                      },
                      "*"
                    ]
                  ]
                }
              ],
              "Effect": "Allow"
            },
            {
              "Condition": {},
              "Action": [
                "cloudformation:DeleteStack"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::Join": [
                          ":",
                          [
                            "arn:aws:cloudformation",
                            {
                              "Ref": "AWS::Region"
                            },
                            {
                              "Ref": "AWS::AccountId"
                            },
                            "stack/"
                          ]
                        ]
                      },
                      {
                        "Ref": "AWS::StackName"
                      },
                      "/*"
                    ]
                  ]
                }
              ],
              "Effect": "Allow"
            },
            {
              "Condition": {},
              "Action": [
                "cloudwatch:ListMetrics",
                "cloudwatch:PutMetricAlarm",
                "cloudwatch:PutMetricData",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:DeleteAlarms"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Condition": {},
              "Action": [
                "sqs:ListQueues"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:sqs",
                      {
                        "Ref": "AWS::Region"
                      },
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "*"
                    ]
                  ]
                }
              ],
              "Effect": "Allow"
            },
            {
              "Condition": {},
              "Action": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::Join": [
                          ":",
                          [
                            "arn:aws:sqs",
                            {
                              "Ref": "AWS::Region"
                            },
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ""
                          ]
                        ]
                      },
                      "ESS-",
                      {
                        "Ref": "ClusterName"
                      },
                      "-queue"
                    ]
                  ]
                }
              ],
              "Effect": "Allow"
            },
            {
              "Condition": {},
              "Action": [
                "sns:ListTopics",
                "sns:GetTopicAttributes",
                "sns:Publish"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:sns",
                      {
                        "Ref": "AWS::Region"
                      },
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "*"
                    ]
                  ]
                }
              ],
              "Effect": "Allow"
            },
            {
              "Condition": {},
              "Action": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::Join": [
                          ":",
                          [
                            "arn:aws:sns",
                            {
                              "Ref": "AWS::Region"
                            },
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ""
                          ]
                        ]
                      },
                      "ESS-",
                      {
                        "Ref": "ClusterName"
                      },
                      "-topic"
                    ]
                  ]
                }
              ],
              "Effect": "Allow"
            },
            {
              "Effect": "Allow",
              "Action": [
                "ssm:ListDocuments"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:ssm",
                      {
                        "Ref": "AWS::Region"
                      },
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "ssm:SendCommand",
                "ssm:CancelCommand",
                "ssm:ListCommandInvocations",
                "ssm:DescribeAssociation",
                "ssm:GetDocument",
                "ssm:ListAssociations",
                "ssm:UpdateAssociationStatus",
                "ssm:UpdateInstanceInformation",
                "ssm:ListInstanceAssociations",
                "ssm:DescribeInstanceInformation"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:ssm",
                      {
                        "Ref": "AWS::Region"
                      },
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "document/*ESS*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:ec2",
                      {
                        "Ref": "AWS::Region"
                      },
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "instance/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply"
              ],
              "Resource": "*"
            },
            {
              "Action": "s3:CreateBucket",
              "Resource": "arn:aws:s3:::com.sungardas.enhancedsnapshots*",
              "Effect": "Deny"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "EsAdmin"
          }
        ]
      }
    },
    "SecurityGroupIngress22": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "CidrIp": {
          "Ref": "VPCCIDR"
        },
        "FromPort": 22,
        "GroupId": {
          "Fn::GetAtt": [
            "SecurityGroup",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "ToPort": 22
      }
    },
    "SecurityGroupIngress443": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "CidrIp": {
          "Ref": "VPCCIDR"
        },
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "SecurityGroup",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "ToPort": 443
      }
    },
    "SecurityGroupIngress80": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "CidrIp": {
          "Ref": "VPCCIDR"
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "SecurityGroup",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "ToPort": 80
      }
    },
    "PrivateSecurityGroupIngress6442": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "CidrIp": {
          "Ref": "VPCCIDR"
        },
        "FromPort": 6442,
        "GroupId": {
          "Fn::GetAtt": [
            "SecurityGroup",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "ToPort": 6442
      }
    },
    "PrivateSecurityGroupIngress61614": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "CidrIp": {
          "Ref": "VPCCIDR"
        },
        "FromPort": 61614,
        "GroupId": {
          "Fn::GetAtt": [
            "SecurityGroup",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "ToPort": 61614
      }
    },
    "PrivateSecurityGroupIngress61616": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "CidrIp": {
          "Ref": "VPCCIDR"
        },
        "FromPort": 61616,
        "GroupId": {
          "Fn::GetAtt": [
            "SecurityGroup",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "ToPort": 61616
      }
    },
    "ELBSecurityGroupIngress22": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "CidrIp": {
          "Ref": "SshLocation"
        },
        "FromPort": 22,
        "GroupId": {
          "Fn::GetAtt": [
            "ELBSecurityGroup",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "ToPort": 22
      }
    },
    "ELBSecurityGroupIngress443": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "CidrIp": {
          "Ref": "SourceCIDR"
        },
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "ELBSecurityGroup",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "ToPort": 443
      }
    },
    "ELBSecurityGroupIngress80": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "CidrIp": {
          "Ref": "SourceCIDR"
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "ELBSecurityGroup",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "ToPort": 80
      }
    },
    "SnsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": {
          "Fn::Join": [
            "",
            [
              "ESS-",
              {
                "Ref": "ClusterName"
              },
              "-topic"
            ]
          ]
        },
        "TopicName": {
          "Fn::Join": [
            "",
            [
              "ESS-",
              {
                "Ref": "ClusterName"
              },
              "-topic"
            ]
          ]
        }
      }
    },
    "ElasticLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Listeners": [
          {
            "LoadBalancerPort": "443",
            "InstancePort": "443",
            "InstanceProtocol": "HTTPS",
            "Protocol": "HTTPS",
            "PolicyNames": [
              "ESSELBPolicy"
            ],
            "SSLCertificateId": {
              "Ref": "SslCertificateArn"
            }
          },
          {
            "LoadBalancerPort": "80",
            "InstancePort": "80",
            "InstanceProtocol": "HTTP",
            "Protocol": "HTTP"
          },
          {
            "LoadBalancerPort": "22",
            "InstancePort": "22",
            "InstanceProtocol": "TCP",
            "Protocol": "TCP"
          }
        ],
        "ConnectionSettings": {
          "IdleTimeout": 600
        },
        "CrossZone": "true",
        "HealthCheck": {
          "Target": "HTTPS:443/",
          "HealthyThreshold": 3,
          "UnhealthyThreshold": 7,
          "Interval": 30,
          "Timeout": 10
        },
        "LBCookieStickinessPolicy": [
          {
            "PolicyName": "ESSELBPolicy"
          }
        ],
        "LoadBalancerName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ClusterName"
              },
              "-lb"
            ]
          ]
        },
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Ref": "ELBSecurityGroup"
          }
        ],
        "Subnets": [
          {
            "Ref": "PublicSubnet1"
          },
          {
            "Ref": "PublicSubnet2"
          }
        ]
      }
    },
    "ESS": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Ref": "TemplateUrl"
        }
      }
    },
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enhanced Snapshot",
        "VpcId": {
          "Ref": "VpcId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "NameTag"
            }
          }
        ]
      }
    },
    "ELBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ELB Enhanced Snapshot",
        "VpcId": {
          "Ref": "VpcId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "NameTag"
            }
          }
        ]
      }
    },
    "LaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "configSets": {
            "default": [
              "setKeys",
              "runEnvVar",
              "runApp"
            ]
          },
          "setKeys": {
            "commands": {
              "001": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "/usr/bin/aws configure set default.region ",
                      {
                        "Ref": "AWS::Region"
                      }
                    ]
                  ]
                }
              }
            }
          },
          "runEnvVar": {
            "commands": {
              "001": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "sed -i \"/export PATH/i ",
                      "export CUSTOM_BUCKET_NAME=\"$CUSTOM_BUCKET_NAME\"",
                      "\\nexport STACK_NAME=\"$STACK_NAME\"",
                      "\\nexport CLUSTER_ID=\"$CLUSTER_ID\"",
                      "\\nexport UUID=\"$UUID\"",
                      "\" ",
                      "/etc/init.d/tomcat8"
                    ]
                  ]
                },
                "env": {
                  "CUSTOM_BUCKET_NAME": {
                    "Ref": "BucketName"
                  },
                  "CLUSTER_ID": {
                    "Ref": "ClusterName"
                  },
                  "STACK_NAME": {
                    "Ref": "AWS::StackName"
                  },
                  "UUID": {
                    "Ref": "UUID"
                  }
                }
              }
            }
          },
          "devMode": {
            "commands": {
              "001": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "sed -i \"/export PATH/i ",
                      "export JPDA_ADDRESS=\\\"0.0.0.0:8000\\\"",
                      "\" ",
                      "/etc/init.d/tomcat8"
                    ]
                  ]
                }
              },
              "002": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "sed -i -e 's@^exec.*$@exec \"$PRGDIR\"/\"$EXECUTABLE\" jpda start \"$\\@\"@g' ",
                      "/opt/tomcat-latest/bin/startup.sh"
                    ]
                  ]
                }
              }
            }
          },
          "runApp": {
            "commands": {
              "001": {
                "command": "service tomcat8 restart"
              }
            }
          }
        }
      },
      "Properties": {
        "AssociatePublicIpAddress": true,
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "ImageID"
          ]
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "SecurityGroups": [
          {
            "Ref": "SecurityGroup"
          }
        ],
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "IamInstanceProfile": {
          "Ref": "InstanceProfileEsAdmin"
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": {
                "Ref": "VolumeSize"
              },
              "VolumeType": "io1",
              "Iops": {
                "Ref": "VolumeIOps"
              }
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ex\n",
                "# Helper function\n",
                "function error_exit\n",
                "{\n",
                "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" ",
                "  --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "  --resource AutoScalingGroup ",
                "  --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "  exit 1\n",
                "}\n",
                "# Process CloudFormation init definitions\n",
                "/opt/aws/bin/cfn-init -s ",
                {
                  "Ref": "AWS::StackName"
                },
                " -r LaunchConfiguration ",
                " -c default ",
                "    --region ",
                {
                  "Ref": "AWS::Region"
                },
                " || error_exit 'Failed to run cfn-init'\n",
                "# All is well so signal success\n",
                "/opt/aws/bin/cfn-signal -e 0 -r \"Stack setup complete\" ",
                "  --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "  --resource AutoScalingGroup ",
                "  --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "#EOF"
              ]
            ]
          }
        }
      }
    },
    "AutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "LoadBalancerNames": [
          {
            "Ref": "ElasticLoadBalancer"
          }
        ],
        "NotificationConfigurations": [
          {
            "NotificationTypes": [
              "autoscaling:EC2_INSTANCE_LAUNCH",
              "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
              "autoscaling:EC2_INSTANCE_TERMINATE",
              "autoscaling:EC2_INSTANCE_TERMINATE_ERROR",
              "autoscaling:TEST_NOTIFICATION"
            ],
            "TopicARN": {
              "Ref": "SnsTopic"
            }
          }
        ],
        "HealthCheckType": "ELB",
        "HealthCheckGracePeriod": "20",
        "VPCZoneIdentifier": [
          {
            "Ref": "PublicSubnet1"
          },
          {
            "Ref": "PublicSubnet2"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "LaunchConfiguration"
        },
        "MinSize": "1",
        "MaxSize": "1",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "NameTag"
                  },
                  "-",
                  {
                    "Ref": "ClusterName"
                  }
                ]
              ]
            },
            "PropagateAtLaunch": "true"
          }
        ]
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT15M",
          "Count": "1"
        }
      }
    }
  }
}