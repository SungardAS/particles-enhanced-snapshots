{{#layout
  TemplateDescription=(partial 'template_description_ha')
}}{{
  condition "defined_ssh" logicalId="DefinedSsh"
  sshLocationLogicalId="SshLocation"
  }}

  {{ set "minimal_stack_ha" }}

  {{resource "m:vpc" "vpc"
    logicalId="VPC"
    cidrBlock=(ref "VPCCIDR")
  }}

  {{resource "m:vpc" "security_group"
    logicalId="SecurityGroup"
    VpcId=(ref "VPC")
    Tags=(ref "NameTag")
  }}

  {{resource "m:vpc" "security_group"
    logicalId="PrivateSecurityGroup"
    VpcId=(ref "VPC")
    Tags=(ref "NameTag")
  }}

  {{resource "m:vpc" "subnet"
    logicalId="PublicSubnet1"
    CidrBlock='{ "Fn::Select" : ["0", { "Ref": "PublicSubnetIds" }]}'
    AvailabilityZone='{ "Fn::Select" : ["0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } }]}'
    VpcId=(ref "VPC")
  }}

  {{resource "m:vpc" "subnet"
    logicalId="PublicSubnet2"
    CidrBlock='{ "Fn::Select" : ["1", { "Ref": "PublicSubnetIds" }]}'
    AvailabilityZone='{ "Fn::Select" : ["1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } }]}'
    VpcId=(ref "VPC")
  }}

  {{resource "m:vpc" "subnet"
    logicalId="PrivateSubnet1"
    CidrBlock='{ "Fn::Select" : ["0", { "Ref": "PrivateSubnetIds" }]}'
    AvailabilityZone='{ "Fn::Select" : ["0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } }]}'
    VpcId=(ref "VPC")
  }}

  {{resource "m:vpc" "subnet"
    logicalId="PrivateSubnet2"
    CidrBlock='{ "Fn::Select" : ["1", { "Ref": "PrivateSubnetIds" }]}'
    AvailabilityZone='{ "Fn::Select" : ["1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } }]}'
    VpcId=(ref "VPC")
  }}

  {{
    resource "m:core" "base"
    type="AWS::EC2::InternetGateway"
    logicalId="InternetGateway"
    properties='{}'
  }}

  {{
    resource 'vpcgatewayattachment'
    logicalId="GatewayToInternet"
    vpcLogicalId="VPC"
    internetGatewayLogicalId="InternetGateway"
  }}

  {{
    resource 'launchconfiguration'
    logicalId="LaunchConfiguration"
    imageId='{ "Ref": "ImageId" }'
    keyNameLogicalId="KeyName"
    instanceTypeLogicalId="InstanceType"
    autoScalingGroupLogicalId="AutoScalingGroup"
    privateSecurityGroupLogicalId="PrivateSecurityGroup"
  }}

  {{
    resource 'autoscalinggroup'
    logicalId="AutoScalingGroup"
    elbLogicalId="ElasticLoadBalancer"
    vpcZoneIdentifier='[ {"Ref": "PrivateSubnet1"}, {"Ref": "PrivateSubnet2"} ]'
    launchConfigurationLogicalId="LaunchConfiguration"
    clusterNameLogicalId="ClusterName"
    clusterSize="1"
    nameTagLogicalId="NameTag"
  }}
{{/layout}}
