{{#layout
  TemplateDescription=(partial 'template_description_ha')
}}{{
  condition "defined_ssh" logicalId="DefinedSsh"
  sshLocationLogicalId="SshLocation"
  }}

  {{ set "minimal_stack_privatenet_ha" }}

  {{resource "m:vpc" "vpc"
    logicalId="VPC"
    cidrBlock=(ref "VPCCIDR")
  }}

  {{resource "m:vpc" "security_group"
    logicalId="SecurityGroup"
    vpcId=(ref "VPC")
    tags=(ref "NameTag")
    groupDescription="Enhanced Snapshot"
  }}

  {{resource "m:vpc" "security_group"
    logicalId="PrivateSecurityGroup"
    vpcId=(ref "VPC")
    tags=(ref "NameTag")
    groupDescription="Enhanced Snapshot"
  }}

  {{resource "m:vpc" "subnet"
    logicalId="PublicSubnet1"
    cidrBlock='{ "Fn::Select" : ["0", { "Ref": "PublicSubnetIds" }]}'
    availabilityZone='{ "Fn::Select" : ["0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } }]}'
    vpcId=(ref "VPC")
  }}

  {{resource "m:vpc" "subnet"
    logicalId="PublicSubnet2"
    cidrBlock='{ "Fn::Select" : ["1", { "Ref": "PublicSubnetIds" }]}'
    availabilityZone='{ "Fn::Select" : ["1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } }]}'
    vpcId=(ref "VPC")
  }}

  {{resource "m:vpc" "subnet"
    logicalId="PrivateSubnet1"
    cidrBlock='{ "Fn::Select" : ["0", { "Ref": "PrivateSubnetIds" }]}'
    availabilityZone='{ "Fn::Select" : ["0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } }]}'
    vpcId=(ref "VPC")
  }}

  {{resource "m:vpc" "subnet"
    logicalId="PrivateSubnet2"
    cidrBlock='{ "Fn::Select" : ["1", { "Ref": "PrivateSubnetIds" }]}'
    availabilityZone='{ "Fn::Select" : ["1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } }]}'
    vpcId=(ref "VPC")
  }}

  {{resource "m:vpc" "internet_gateway"
    logicalId="InternetGateway"
  }}

  {{resource 'vpcgatewayattachment'
    logicalId="GatewayToInternet"
    vpcLogicalId=(ref "VPC")
    internetGatewayLogicalId=(ref "InternetGateway")
  }}

  {{resource 'launchconfiguration'
    logicalId="LaunchConfiguration"
    imageId=(ref "ImageId")
    keyNameLogicalId=(ref "KeyName")
    instanceTypeLogicalId=(ref "InstanceType")
    autoScalingGroupLogicalId="AutoScalingGroup"
    securityGroupLogicalId=(ref "PrivateSecurityGroup")
    associatePublicIpAddress="true"
  }}

  {{resource 'autoscalinggroup'
    logicalId="AutoScalingGroup"
    elbLogicalId=(ref "ElasticLoadBalancer")
    vpcZoneIdentifier='[ {"Ref": "PrivateSubnet1"}, {"Ref": "PrivateSubnet2"} ]'
    launchConfigurationLogicalId=(ref "LaunchConfiguration")
    clusterNameLogicalId=(ref "ClusterName")
    clusterSize="1"
    nameTagLogicalId=(ref "NameTag")
  }}

{{/layout}}
